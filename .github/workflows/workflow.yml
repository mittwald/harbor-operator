name: Go

# Trigger the workflow on push or pull requests
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:

env:
  KUBECONFIG: /tmp/kubeconfig
  IMAGE_NAME: quay.io/mittwald/harbor-operator
  REGISTRY_URL: quay.io/mittwald

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.28.3

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run -v --timeout 30m

  test:
    name: Test
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Hack Code Climate and Go Modules
        if: github.event_name != 'pull_request'
        run: mkdir -p github.com/mittwald && ln -sf $(pwd) github.com/mittwald/harbor-operator

      - name: Go Test
        if: github.event_name == 'pull_request'
        run: sudo ln -sf /bin/bash /bin/sh && make test

      - name: Test & publish code coverage
        if: github.event_name != 'pull_request'
        uses: paambaati/codeclimate-action@v2.7.4
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.codeClimateReporterID }}
        with:
          coverageCommand: go test -v -coverprofile=cover.out ./...
          debug: true
          prefix: 'github.com/${{ github.repository }}/'

  build:
    name: Build Image
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build Image
        run: sudo ln -sf /bin/bash /bin/sh && make docker-build

  deploymaster:
    name: Deploy Latest Image
    runs-on: ubuntu-18.04
    needs: ['test', 'build']
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Registry Login
        run: docker login -u "${{ secrets.dockerLoginUsername }}" -p "${{ secrets.dockerLoginPassword }}" "${REGISTRY_URL}"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build latest image
        run: make docker-build

      - name: Push latest tag
        run: docker push "$IMAGE_NAME:latest"

  deploytagged:
    name: Deploy Tagged Image
    runs-on: ubuntu-18.04
    needs: ['test', 'build']
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Set up Go 1.15
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Registry Login
        run: docker login -u "${{ secrets.dockerLoginUsername }}" -p "${{ secrets.dockerLoginPassword }}" "${REGISTRY_URL}"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Tag versioned image
        run: docker tag "$IMAGE_NAME:latest" "$IMAGE_NAME:${GITHUB_REF##*/}"

      - name: Push images
        run: docker push "$IMAGE_NAME:latest" && docker push "$IMAGE_NAME:${GITHUB_REF##*/}"

      - name: Run chart version bump
        uses: mittwald/bump-app-version-action@v0.2.1
        with:
          mode: 'publish'
          chartYaml: './deploy/helm-chart/harbor-operator/Chart.yaml'
        env:
          GITHUB_TOKEN: "${{ secrets.githubToken }}"
