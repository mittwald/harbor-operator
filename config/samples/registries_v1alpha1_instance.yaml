apiVersion: registries.mittwald.de/v1alpha1
kind: Instance
metadata:
  name: test-harbor
  namespace: harbor-operator
spec:
  name: test-harbor
  type: manual
  instanceURL: http://core.harbor.domain:30002
  garbageCollection:
    cron: "0 * * * *"
    scheduleType: "Hourly"
  helmChart:
      release: test-harbor
      chart: harbor/harbor
      version: v1.5.1 # equalling to Harbor OSS version v2.1.1
      # see https://github.com/goharbor/harbor-helm/releases for a full list of supported versions
      namespace: harbor-operator
      valuesYaml: |
        expose:
          type: nodePort
          tls:
            enabled: false
            secretName: ""
            notarySecretName: ""
            commonName: ""
          ingress:
            hosts:
              core: core.harbor.domain:30002
              notary: core.harbor.domain:30002
            controller: default
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-issuer"
              ingress.kubernetes.io/ssl-redirect: "true"
              ingress.kubernetes.io/proxy-body-size: "0"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/proxy-body-size: "0"
          clusterIP:
            name: harbor
            ports:
              httpPort: 80
              httpsPort: 443
              notaryPort: 4443
          nodePort:
            name: harbor
            ports:
              http:
                port: 80
                nodePort: 30002
              https:
                port: 443
                nodePort: 30003
              notary:
                port: 4443
                nodePort: 30004
          loadBalancer:
            name: harbor
            IP: ""
            ports:
              httpPort: 80
              httpsPort: 443
              notaryPort: 4443
            annotations: {}
            sourceRanges: []
        externalURL: http://core.harbor.domain:30002
        persistence:
          enabled: true
          resourcePolicy: "keep"
          persistentVolumeClaim:
            registry:
              existingClaim: ""
              storageClass: ""
              subPath: ""
              accessMode: ReadWriteOnce
              size: 5Gi
            chartmuseum:
              existingClaim: ""
              storageClass: ""
              subPath: ""
              accessMode: ReadWriteOnce
              size: 5Gi
            jobservice:
              existingClaim: ""
              storageClass: ""
              subPath: ""
              accessMode: ReadWriteOnce
              size: 1Gi
            database:
              existingClaim: ""
              storageClass: ""
              subPath: ""
              accessMode: ReadWriteOnce
              size: 1Gi
            redis:
              existingClaim: ""
              storageClass: ""
              subPath: ""
              accessMode: ReadWriteOnce
              size: 1Gi
            trivy:
              existingClaim: ""
              storageClass: ""
              subPath: ""
              accessMode: ReadWriteOnce
              size: 5Gi
          imageChartStorage:
            disableredirect: false
            type: filesystem
            filesystem:
              rootdirectory: /storage
            azure:
              accountname: accountname
              accountkey: base64encodedaccountkey
              container: containername
            gcs:
              bucket: bucketname
              encodedkey: base64-encoded-json-key-file
            s3:
              region: us-west-1
              bucket: bucketname
            swift:
              authurl: https://storage.myprovider.com/v3/auth
              username: username
              password: password
              container: containername
            oss:
              accesskeyid: accesskeyid
              accesskeysecret: accesskeysecret
              region: regionname
              bucket: bucketname
        imagePullPolicy: IfNotPresent
        imagePullSecrets:
        updateStrategy:
          type: RollingUpdate
        logLevel: info
        # If left empty, trigger password generation by the harbor instance itself
        # The admin password will then be saved under the key `HARBOR_ADMIN_PASSWORD`
        # in a secret named `HELM_RELEASE_NAME`-`harbor-core`
        harborAdminPassword: "Harbor12345"
        secretKey: "not-a-secure-key"
        proxy:
          httpProxy:
          httpsProxy:
          noProxy: 127.0.0.1,localhost,.local,.internal
        components:
          - core
          - jobservice
          - clair
        nginx:
          image:
            repository: goharbor/nginx-photon
            tag: v2.1.1
          replicas: 1
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}
        portal:
          image:
            repository: goharbor/harbor-portal
            tag: v2.1.1
          replicas: 1
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}

        core:
          image:
            repository: goharbor/harbor-core
            tag: v2.1.1
          replicas: 1
          livenessProbe:
            initialDelaySeconds: 30
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}
          secret: ""
          secretName: ""
          xsrfKey: ""
        jobservice:
          image:
            repository: goharbor/harbor-jobservice
            tag: v2.1.1
          replicas: 1
          maxJobWorkers: 10
          jobLogger: file
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}
          secret: ""
        registry:
          registry:
            image:
              repository: goharbor/registry-photon
              tag: v2.1.1
          controller:
            image:
              repository: goharbor/harbor-registryctl
              tag: v2.1.1
          replicas: 1
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}
          secret: ""
          relativeurls: false
          credentials:
            username: "harbor_registry_user"
            password: "harbor_registry_password"
            htpasswd: "harbor_registry_user:$2y$10$9L4Tc0DJbFFMB6RdSCunrOpTHdwhid4ktBJmLD00bYgqkkGOvll3m"
          middleware:
            enabled: false
            type: cloudFront
            cloudFront:
              baseurl: example.cloudfront.net
              keypairid: KEYPAIRID
              duration: 3000s
              ipfilteredby: none
              privateKeySecret: "my-secret"
        chartmuseum:
          enabled: true
          absoluteUrl: false
          image:
            repository: goharbor/chartmuseum-photon
            tag: v2.1.1
          replicas: 1
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}
        clair:
          enabled: true
          clair:
            image:
              repository: goharbor/clair-photon
              tag: v2.1.1
          adapter:
            image:
              repository: goharbor/clair-adapter-photon
              tag: v2.1.1
          replicas: 1
          updatersInterval: 12
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}

        trivy:
          enabled: true
          image:
            repository: goharbor/trivy-adapter-photon
            tag: v2.1.1
          replicas: 1
          debugMode: false
          vulnType: "os,library"
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
          ignoreUnfixed: false
          gitHubToken: ""
          skipUpdate: false
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1
              memory: 1Gi
        notary:
          enabled: true
          server:
            image:
              repository: goharbor/notary-server-photon
              tag: v2.1.1
            replicas: 1
          signer:
            image:
              repository: goharbor/notary-signer-photon
              tag: v2.1.1
            replicas: 1
          nodeSelector: {}
          tolerations: []
          affinity: {}
          podAnnotations: {}
          secretName: ""

        database:
          type: internal
          internal:
            image:
              repository: goharbor/harbor-db
              tag: v2.1.1
            initContainerImage:
              repository: busybox
              tag: latest
            password: "changeit"
            nodeSelector: {}
            tolerations: []
            affinity: {}
          external:
            host: "192.168.0.1"
            port: "5432"
            username: "user"
            password: "password"
            coreDatabase: "registry"
            clairDatabase: "clair"
            notaryServerDatabase: "notary_server"
            notarySignerDatabase: "notary_signer"
            sslmode: "disable"
          maxIdleConns: 50
          maxOpenConns: 100
          podAnnotations: {}
        redis:
          type: internal
          internal:
            image:
              repository: goharbor/redis-photon
              tag: v2.1.1
            nodeSelector: {}
            tolerations: []
            affinity: {}
          external:
            host: "192.168.0.2"
            port: "6379"
            coreDatabaseIndex: "0"
            jobserviceDatabaseIndex: "1"
            registryDatabaseIndex: "2"
            chartmuseumDatabaseIndex: "3"
            clairAdapterIndex: "4"
            trivyAdapterIndex: "5"
            password: ""
          podAnnotations: {}
